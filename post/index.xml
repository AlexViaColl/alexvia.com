<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Posts on Alex Via</title>
    <link>https://alexvia.com/post/</link>
    <description>Recent content in Posts on Alex Via</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en</language>
    <lastBuildDate>Sun, 07 Nov 2021 00:00:00 +0000</lastBuildDate><atom:link href="https://alexvia.com/post/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Opening a Window in X11</title>
      <link>https://alexvia.com/post/xlib_opening_window/</link>
      <pubDate>Sun, 07 Nov 2021 00:00:00 +0000</pubDate>
      
      <guid>https://alexvia.com/post/xlib_opening_window/</guid>
      <description>The X Window System is a windowing system commonly used in UNIX-based operating systems. The latest version of X is version 11 (released 2012), that&amp;rsquo;s why it&amp;rsquo;s often abbreviated as X11.
X11 is based on a client-server architecture. The server is the one who has direct access over the hardware devices such as the monitor screens, the keyboard and the mouse. Client applications should make requests to the server in order to achieve any kind of graphical output to the screen.
X is not the only Window System available for Linux and other UNIX-like operating systems. Wayland is a more modern project with the aim of replacing X.</description>
    </item>
    
    <item>
      <title>8 Uses of Pointers in C</title>
      <link>https://alexvia.com/post/uses_of_pointers_in_c/</link>
      <pubDate>Sun, 31 Oct 2021 00:00:00 +0000</pubDate>
      
      <guid>https://alexvia.com/post/uses_of_pointers_in_c/</guid>
      <description>At a fundamental level a pointer is just a number which represents a memory address. The size of a pointer depends on the platform, for 64 bit platforms the size is 64 bits (8 bytes) and for 32 bit platforms the size is 32 bits (4 bytes), but the size is always the same for a given platform regardless of the pointer&amp;rsquo;s type.
printf(&amp;quot;%d\n&amp;quot;, sizeof(int*)); printf(&amp;quot;%d\n&amp;quot;, sizeof(char*)); printf(&amp;quot;%d\n&amp;quot;, sizeof(void*)); printf(&amp;quot;%d\n&amp;quot;, sizeof(MyCustomType*));  A memory address specifies the location of a single byte in memory, if we wanted to read only a single bit from memory, we would have to read a whole byte and then do some bit twiddling to extract the bit we were interested in.</description>
    </item>
    
  </channel>
</rss>
